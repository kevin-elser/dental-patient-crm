generator client {
  provider = "prisma-client-js"
  output   = "./generated/app-client"
}

datasource db {
  provider = "mysql"
  url      = env("APP_DATABASE_URL")
}

model PatientGroup {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(16)
  description String?  @db.Text
  tags        String?  @db.Text  // Store as JSON array
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  patients    PatientReference[]
}

model PatientReference {
  id            Int          @id @default(autoincrement())
  patientId     BigInt       // References PatNum from main database
  colorIndex    Int          @default(1)
  phoneNumber   String?      @db.VarChar(20)  // Store the patient's phone number
  groups        PatientGroup[]
  notes         PatientNote[]
  messages      Message[]    // Relation to messages
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt

  @@unique([patientId])
  @@index([patientId])
}

model PatientNote {
  id          Int              @id @default(autoincrement())
  patientRef  PatientReference @relation(fields: [patientRefId], references: [id])
  patientRefId Int
  title       String          @db.VarChar(255)
  content     String          @db.Text
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  @@index([patientRefId])
}

model Message {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  direction   String   @db.VarChar(10) // "INBOUND" or "OUTBOUND"
  status      String   @db.VarChar(20) // "DELIVERED", "FAILED", "PENDING", etc.
  fromNumber  String   @db.VarChar(20)
  toNumber    String   @db.VarChar(20)
  body        String   @db.Text
  twilioSid   String?  @db.VarChar(50)  // Twilio message ID for reference
  patientId   BigInt   // Reference to patient in main DB
  patientRef  PatientReference @relation(fields: [patientRefId], references: [id])
  patientRefId Int
  isEncrypted Boolean  @default(true)
  metadata    Json?    // Store additional Twilio metadata
  scheduledFor DateTime? // When the message should be sent
  auditLog    MessageAudit[]

  @@index([patientId])
  @@index([patientRefId])
  @@index([createdAt])
  @@index([twilioSid])
  @@index([scheduledFor])
}

model MessageAudit {
  id        String   @id @default(uuid())
  messageId String
  message   Message  @relation(fields: [messageId], references: [id])
  action    String   @db.VarChar(50) // "VIEW", "SEND", "DELETE", etc.
  userId    String   @db.VarChar(255) // Store the user's email who performed the action
  timestamp DateTime @default(now())
  ipAddress String?  @db.VarChar(45)
  userAgent String?  @db.VarChar(255)

  @@index([messageId])
  @@index([timestamp])
} 